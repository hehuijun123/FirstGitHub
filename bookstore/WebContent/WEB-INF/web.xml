<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    
    <!-- springMvc前端控制器配置 -->
    
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
        <!-- contextConfigLocation：指定springmvc配置的加载位置，如果不指定则默认加
               载WEB-INF/servlet名称—servlet.xml(springmvc-servlet.xml)
         -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-annotation.xml</param-value>
        </init-param>
        <!-- load-on-startup:表示servlet随服务启动； -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!-- 
              第一种：*.action 或者 *.do，访问以.action或*.do结尾 由DispatcherServlet进行解析
              第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析
              使用此种方式可以实现 RESTful风格的url
              第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时，
              仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。
       -->
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>
    <!-- springMvc前端控制器配置 -->
    
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>